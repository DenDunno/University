cat("\014")
#install.packages('corrplot')
#install.packages("GGally")
library(corrplot)
library(GGally)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_3/")
weaterHistory = read.csv(file = 'weatherHistory.csv', header = TRUE)
weaterHistory = weaterHistory[-c(10)]
weaterHistory = weaterHistory[-c(1:80000), ]
data = weaterHistory[ , c(4 : 9)]
data = data[-c(5)]
names(data)[1] = 'Реальна температура'
names(data)[2] = 'Уявна температура'
names(data)[3] = 'Вологість'
names(data)[4] = 'Швидкість вітру'
names(data)[5] = 'Видимість'
x = data$`Реальна температура`
y = data$Вологість
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1)
# 2. Regression model
regressionModel = lm(y ~ x)
summary(regressionModel)
slope =  sum((x - mean(x)) * (y - mean(y))) / sum((x-mean(x))^2)
intercept = mean(y)- slope * mean(x)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 4. Response-prediction plot
resid = resid(regressionModel)
prediction = y - resid
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук")
abline(0,1, col="red", lwd=2)
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
abline(0,0,lwd=2 , col='red')
# 6. Q-Q diagram
plot(regressionModel)
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
abline(0,0,lwd=2 , col='red')
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
abline(0,0,lwd=2 , col='red')
# 6. Q-Q diagram
plot(regressionModel)
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук")
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1)
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 2)
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 4)
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 6)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 4. Response-prediction plot
resid = resid(regressionModel)
prediction = y - resid
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук")
abline(0,1, col="red", lwd=2)
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук",
col='lightblue')
abline(0,1, col="red", lwd=2)
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук",
pch = 20,
col='lightblue')
abline(0,1, col="red", lwd=2)
plot(prediction, y,
xlab="Прогнозовані значення",
ylab="Значення відгуку",
main="Діаграма прогноз-відгук",
pch = 20,
col='lightblue',
lwd = 6)
abline(0,1, col="red", lwd=2)
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки")
abline(0,0,lwd=2 , col='red')
# 5. Residuals vs prediction plot
plot(prediction, resid,
xlab="Прогнозовані значення",
ylab="Залишки",
main="Діаграма прогноз-залишки",
pch = 20,
col='pink',
lwd = 6)
abline(0,0,lwd=2 , col='red')
# 6. Q-Q diagram
plot(regressionModel)
regressionModel
regressionModel
summary(regressionModel)
regressionModel
summary(regressionModel)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 6)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 6)
# 2. Regression model
regressionModel = lm(y ~ x)
summary(regressionModel)
slope =  sum((x - mean(x)) * (y - mean(y))) / sum((x-mean(x))^2)
intercept = mean(y)- slope * mean(x)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 3. Regression line
abline(b = intercept, a = slope, lwd = 2, col = 'red')
intercept
intercept = mean(y)- slope * mean(x)
# 1. Scatterplot
plot(x, y,
main="Діаграма розсіювання",
xlab="Реальна температура",
ylab="Вологість",
col = 'lightgreen',
pch = 20,
cex = 1,
lwd = 6)
# 3. Regression line
abline(b = slope, a = intercept, lwd = 2, col = 'red')
# 3. Regression line
abline(regressionModel, lwd = 2, col = 'red')
rse(y,y-resid(regressionModel))   # residual standard error
1-mean((resid(regressionModel))^2)/mean((y-mean(y))^2)  # determination coefficient
library(lme4)
#install.packages('corrplot')
#install.packages("GGally")
install.packages("lme4")
library(lme4)
rse(y,y-resid(regressionModel))   # residual standard error
1-mean((resid(regressionModel))^2)/mean((y-mean(y))^2)  # determination coefficient
regressionModel
summary(regressionModel)
1-mean((resid(regressionModel))^2)/mean((y-mean(y))^2)  # determination coefficient
View(weaterHistory)
View(data)
resid
