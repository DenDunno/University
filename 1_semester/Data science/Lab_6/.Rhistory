library(ggplot2)
library(dplyr)
ds = read.csv('titanic.csv', header=TRUE)
attach(ds)
ds$Pclass = as.factor(ds$Pclass)
ds<-group_by(ds, ds$Pclass)
# 1. Linear scatterplot (stripchart) with means
stripchart(Age ~ Pclass, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
means<-tapply(Age, Pclass, mean)
# 2. ANOVA
# 2.1 Normality visual test
ggplot(ds, aes(x = Age)) + geom_histogram() + facet_wrap(~ Pclass, ncol = 1)
# 2.2. Homoskedasticity visual and Bartlett test
boxplot(Age~Pclass, data = ds, xlab = "Вік", ylab = "Клас", varwidth = T, col = "lightblue")
bartlett.test(Age~Pclass, data = ds)
# 2.3 ANOVA table (to see whether or not the means differ significantly)
model<-lm(Age ~ Pclass, data = ds)
anova(model)
# 2.4 ANOVA for pairs (to see which means differ significantly)
summary(model)
# 2.5 Kruskal-Wallis test
kruskal.test(Age ~ Pclass, ds)
# 3. Contrast analysis
contrasts(ds$Pclass)
contrasts(ds$Pclass)<-contr.sum(n=3)
contrasts(ds$Pclass)
model2<-lm(Age~Pclass, data=ds)
summary(model2)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/")
options(scipen = 999)
diamonds = read.csv(file = 'diamonds_dataset.csv', header = TRUE)
diamonds$shape = as.factor(diamonds$shape)
diamonds = group_by(diamonds, diamonds$shape)
model = lm(diamonds$price ~ diamonds$shape, data = diamonds)
anova(model)
summary(model)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_6/")
diamonds = read.csv(file = 'menu', header = TRUE)
diamonds = read.csv(file = 'menu.csv', header = TRUE)
rm(diamonds)
menu = read.csv(file = 'menu.csv', header = TRUE)
View(menu)
sample.us.city.crime,1970
sample.us.city.crime.1970
data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
menu = read.csv(file = 'menu.csv', header = TRUE)
row.names(menu)
row.names(menu) = menu$Item
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
row.names(menu) = menu$Item
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
row.names(menu) = menu$Name
cat("\014")
row.names(menu)
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(ds, method="euclidean")
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(ds, method="euclidean")
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
res.dist
res.ctr = hclust(d=res.dist, method="centroid")
res.med = hclust(d=res.dist, method="median")
plot(res.med, main="Median method")
plot(res.ctr, main="Centroid method")
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Category, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
row.names(menu) = menu$Name
res.coph = cophenetic(res.med)
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
res.ctr = hclust(d=res.dist, method="centroid")
plot(res.ctr, main="Centroid method")
row.names(menu) = menu$Name
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
res.ctr = hclust(d=res.dist, method="centroid")
plot(res.ctr, main="Centroid method")
row.names(menu) = menu$Name
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Category, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
row.names(menu) = menu$Name
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
res.ctr = hclust(d=res.dist, method="centroid")
plot(res.ctr, main="Centroid method")
menu[1 : 50]
menu[1:50]
menu[c(1:50)]
menu[1]
menu[2]
cat("\014")
menu[2]
menu[3]
menu = read.csv(file = 'menu.csv', header = TRUE)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
cat("\014")
menu[3]
menu[1:3]
cat("\014")
menu[1:3]
menu[, c(1:3)]
cat("\014")
menu[, c(1:3)]
menu[, c(1:4)]
cat("\014")
select(menu[, c(1:3)])
select(menu , c(1))
select(menu , c(1:2))
cat("\014")
menu = read.csv(file = 'menu.csv', header = TRUE)
menu
menu[, c(1 : 100)]
menu[, c(1)]
cat("\014")
menu[, c(5)]
library(dplyr)
select()
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
select()
menu %>%
select(c(2, 5, 6))
head(menu,4)
cat("\014")
head(menu,4)
head(menu,50)
menu = head(menu,50)
menu = data.frame(Name = menu$Item, Calories = menu$Calories , Cholesterol = menu$Cholesterol)
row.names(menu) = menu$Name
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
res.ctr = hclust(d=res.dist, method="centroid")
plot(res.ctr, main="Centroid method")
res.ctr = hclust(d=res.dist, method="centroid")
plot(res.ctr, main="Centroid method")
res.coph = cophenetic(res.ctr)
cor(res.dist, res.coph)
res.med = hclust(d=res.dist, method="median")
plot(res.med, main="Median method")
res.coph = cophenetic(res.med)
cor(res.dist, res.coph)
res.wrd2 = hclust(d=res.dist, method="ward.D2")
plot(res.wrd2, main="Ward's method")
res.coph = cophenetic(res.wrd2)
cor(res.dist, res.coph)
res.avg = hclust(d=res.dist, method="average")
plot(res.avg, main="Average linkage")
res.coph = cophenetic(res.avg)
res.sgl = hclust(d=res.dist, method="single")
plot(res.sgl, main="Single linkage (nearest neighbor) method")
res.coph = cophenetic(res.sgl)
cor(res.dist, res.coph)
res.cpl = hclust(d=res.dist, method="complete")
plot(res.cpl, main="Complete linkage (furthest neighbor) method")
res.coph = cophenetic(res.cpl)
cor(res.dist, res.coph)
res.mcq = hclust(d = res.dist, method = "mcquitty")
plot(res.mcq, main="McQuitty method")
res.coph = cophenetic(res.mcq)
cor(res.dist, res.coph)
# 1.1. Cluster analysis (hierarchical)
res.dist = dist(menu, method="euclidean")
