library(ggplot2)
library(dplyr)
ds = read.csv('titanic.csv', header=TRUE)
attach(ds)
ds$Pclass = as.factor(ds$Pclass)
ds<-group_by(ds, ds$Pclass)
# 1. Linear scatterplot (stripchart) with means
stripchart(Age ~ Pclass, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
means<-tapply(Age, Pclass, mean)
# 2. ANOVA
# 2.1 Normality visual test
ggplot(ds, aes(x = Age)) + geom_histogram() + facet_wrap(~ Pclass, ncol = 1)
# 2.2. Homoskedasticity visual and Bartlett test
boxplot(Age~Pclass, data = ds, xlab = "Вік", ylab = "Клас", varwidth = T, col = "lightblue")
bartlett.test(Age~Pclass, data = ds)
# 2.3 ANOVA table (to see whether or not the means differ significantly)
model<-lm(Age ~ Pclass, data = ds)
anova(model)
# 2.4 ANOVA for pairs (to see which means differ significantly)
summary(model)
# 2.5 Kruskal-Wallis test
kruskal.test(Age ~ Pclass, ds)
# 3. Contrast analysis
contrasts(ds$Pclass)
contrasts(ds$Pclass)<-contr.sum(n=3)
contrasts(ds$Pclass)
model2<-lm(Age~Pclass, data=ds)
summary(model2)
barplot(data[order(data, decreasing = TRUE)] , col=coul,
main = "Google play downloads", cex.names = 0.75,
ylab= "Downloads",
xlab = "Genres")
cat("\014")
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(MASS)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/")
googlePlayStore = read.csv(file = 'googleplaystore.csv', header = TRUE)
googlePlayStore = googlePlayStore[ c(1:10000), ]
googlePlayStore$Category = as.factor(googlePlayStore$Category)
googlePlayStore = group_by(googlePlayStore, googlePlayStore$Category)
data = table(googlePlayStore$Category)
genres = as.factor(names(data))
downloads = as.numeric(data)
# 1. Linear scatterplot with mean
coul = brewer.pal(5, "Set2")
barplot(data[order(data, decreasing = TRUE)] , col=coul,
main = "Google play downloads", cex.names = 0.75,
ylab= "Downloads",
xlab = "Genres")
abline(a = mean(data) , b =  0, lty = 2, lwd = 5, col = 'red')
stripchart(googlePlayStore$Rating ~ as.factor(googlePlayStore$Genres), xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
gsub("1","",as.character(googlePlayStore$Installs))
gsub(",","",as.character(googlePlayStore$Installs))
installsStr = substr(intallsWihoutCome,1,nchar(intallsWihoutCome)-1)
intallsWihoutCome = gsub(",","",as.character(googlePlayStore$Installs))
installsStr = substr(intallsWihoutCome,1,nchar(intallsWihoutCome)-1)
intalls = as.numeric(installsStr)
installs
installs = as.numeric(installsStr)
installs
googlePlayStore$Installs = installs
View(googlePlayStore)
options(scipen = 999)
installs
View(googlePlayStore)
rm(installs)
rm(installsStr)
rm(intallsWihoutCome)
rm(insalls)
rm(intalls)
rm(genres)
rm(downloads)
rm(data)
cat("\014")
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(MASS)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/")
options(scipen = 999)
googlePlayStore = read.csv(file = 'googleplaystore.csv', header = TRUE)
googlePlayStore = googlePlayStore[ c(1:10000), ]
googlePlayStore$Category = as.factor(googlePlayStore$Category)
googlePlayStore = group_by(googlePlayStore, googlePlayStore$Category)
intallsWihoutCome = gsub(",","",as.character(googlePlayStore$Installs))
installsStr = substr(intallsWihoutCome,1,nchar(intallsWihoutCome)-1)
installs = as.numeric(installsStr)
googlePlayStore$Installs = installs
rm(data)
rm(installsStr)
rm(intallsWihoutCome)
rm(installs)
cat("\014")
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(MASS)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/")
options(scipen = 999)
googlePlayStore = read.csv(file = 'googleplaystore.csv', header = TRUE)
googlePlayStore = googlePlayStore[ c(1:10000), ]
googlePlayStore$Category = as.factor(googlePlayStore$Category)
googlePlayStore = group_by(googlePlayStore, googlePlayStore$Category)
intallsWihoutCome = gsub(",","",as.character(googlePlayStore$Installs))
installsStr = substr(intallsWihoutCome,1,nchar(intallsWihoutCome)-1)
installs = as.numeric(installsStr)
googlePlayStore$Installs = installs
rm(installs)
rm(installsStr)
rm(intallsWihoutCome)
View(googlePlayStore)
rm(googlePlayStore)
cat("\014")
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(MASS)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/")
options(scipen = 999)
store = read.csv(file = 'googleplaystore.csv', header = TRUE)
store = googlePlayStore[ c(1:10000), ]
store$Category = as.factor(store$Category)
store = group_by(store, store$Category)
intallsWihoutCome = gsub(",","",as.character(store$Installs))
installsStr = substr(intallsWihoutCome,1,nchar(intallsWihoutCome)-1)
installs = as.numeric(installsStr)
store$Installs = installs
rm(installs)
rm(installsStr)
rm(intallsWihoutCome)
View(store)
ggplot(data = qoli,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
View(store)
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.1),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.1, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 2),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
-
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = store,
aes(x = reorder(store$Genres, -store$Installs), y = store$Installs)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = store$Installs)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
diamonds = read.csv(file = 'diamonds_dataset.csv', header = TRUE)
diamonds$Category = as.factor(diamonds$shape)
diamonds = group_by(store, diamonds$shape)
diamonds = group_by(diamonds, diamonds$shape)
rm(store)
View(diamonds)
ggplot(data = diamonds,
aes(x = reorder(diamonds$shape, -diamonds$price), y = diamonds$price)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = diamonds$price)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(data = diamonds,
aes(x = reorder(diamonds$shape, -diamonds$price), y = diamonds$price)) +
labs(title = "Quality of Life Index per Country", x = "Countries", y = "QOLI") +
geom_bar(stat = "identity", width=0.5, position = position_dodge(width=0.5),
aes(fill = diamonds$price)) +
scale_fill_gradient(low = "red", high = "green") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
plot.title = element_text(hjust = 0.5))
diamonds$shape
unique(diamonds$shape)
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
coul = brewer.pal(1, "Set2")
coul = brewer.pal(1, "Set2")
coul = brewer.pal(10, "Set2")
coul = brewer.pal(12, "Set2")
coul = brewer.pal(12, "Set3")
coul = brewer.pal(10, "Set3")
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=coul)
coul = brewer.pal(10, "Set2")
coul = brewer.pal(10, "Paired")
stripchart(diamonds$price ~ diamonds$shape, xlab = "Вік", ylab = "Клас", col=coul)
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за карат (0.2г)",
ylab = "Форма діаманта",
col=coul,
pch=16)
means<-tapply(diamonds$price, diamonds$shape, mean)
means
rm(means)
ggplot(diamonds, aes(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
tapply(diamonds$price, diamonds$shape, var)
mean
tapply(diamonds$price, diamonds$shape, mean)
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за діамант",
ylab = "Форма діаманта",
col=coul,
pch=16)
means = tapply(diamonds$price, diamonds$shape, mean)
means
mean(means)
abline(a = 0 , b = 1)
abline(a = 1 , b = 1)
abline(a = -40.2, b = 0.39, lty = 2, lwd = 5, col = 'green')
abline(a = 0, b = 1000, lty = 2, lwd = 5, col = 'green')
abline(a = 0, b = 10000, lty = 2, lwd = 5, col = 'green')
abline(a = 0, b = 10000, lty = 2, lwd = 5, col = 'red')
abline(a = 0, b = mean(means), lty = 2, lwd = 5, col = 'red')
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за діамант",
ylab = "Форма діаманта",
col=coul,
pch=16,
cex = 10)
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за діамант",
ylab = "Форма діаманта",
col=coul,
pch=16,
cex = 1)
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за діамант",
ylab = "Форма діаманта",
col=coul,
pch=16,
cex = 2)
abline(a = 0, b = mean(means), lty = 2, lwd = 5, col = 'red')
means = tapply(diamonds$price, diamonds$shape, var)
abline(a = 0, b = mean(means), lty = 2, lwd = 5, col = 'red')
means
mean(means)
means = tapply(diamonds$price, diamonds$shape, sd)
means
abline(a = 0, b = mean(means), lty = 2, lwd = 5, col = 'red')
mean(means)
stripchart(diamonds$price ~ diamonds$shape,
xlab = "Ціна в доларах за діамант",
ylab = "Форма діаманта",
col=coul,
pch=16,
cex = 2)
means = tapply(diamonds$price, diamonds$shape, mean)
abline(a = 0, b = mean(means), lty = 2, lwd = 5, col = 'red')
View(diamonds)
summary(aov(diamonds$price ~ diamonds$shape, data = diamonds))
ggplot(ds, aes(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
ggplot(diamonds, aes(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
ggplot(diamonds, x(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
aes
ggplot(diamonds, aes(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
ggplot(diamonds, aes(x = diamonds$price))
ggplot(diamonds, aes(x = diamonds$price)) + geom_histogram()
ggplot(diamonds, aes(x = diamonds$price)) + geom_histogram() + facet_wrap(~ diamonds$shape, ncol = 1)
model = lm(Age ~ Pclass, data = ds)
model = lm(diamonds$price ~ diamonds$shape, data = diamonds)
anova(model)
summary(aov(diamonds$price ~ diamonds$shape, data = diamonds))
model
model = lm(diamonds$price ~ diamonds$shape, data = diamonds)
anova(model)
summary(model)
model = lm(diamonds$price ~ diamonds$shape, data = diamonds)
anova(model)
summary(model)
anova(model)
summary(model)
source("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_4/Lab_4.R", encoding = 'UTF-8')
kruskal.test(diamonds$price ~ diamonds$shape, diamonds)
View(diamonds)
vars = tapply(diamonds$price, diamonds$shape, var)
varMean = mean(vars)
varMean = mean(vars) # середня групова дисперсія
varMean
generalVar = var(diamonds$price)
generalVar
