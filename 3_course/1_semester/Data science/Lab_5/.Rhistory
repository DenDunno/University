library(ggplot2)
library(dplyr)
ds = read.csv('titanic.csv', header=TRUE)
attach(ds)
ds$Pclass = as.factor(ds$Pclass)
ds<-group_by(ds, ds$Pclass)
# 1. Linear scatterplot (stripchart) with means
stripchart(Age ~ Pclass, xlab = "Вік", ylab = "Клас", col=c("red", "green", "blue"))
means<-tapply(Age, Pclass, mean)
# 2. ANOVA
# 2.1 Normality visual test
ggplot(ds, aes(x = Age)) + geom_histogram() + facet_wrap(~ Pclass, ncol = 1)
# 2.2. Homoskedasticity visual and Bartlett test
boxplot(Age~Pclass, data = ds, xlab = "Вік", ylab = "Клас", varwidth = T, col = "lightblue")
bartlett.test(Age~Pclass, data = ds)
# 2.3 ANOVA table (to see whether or not the means differ significantly)
model<-lm(Age ~ Pclass, data = ds)
anova(model)
# 2.4 ANOVA for pairs (to see which means differ significantly)
summary(model)
# 2.5 Kruskal-Wallis test
kruskal.test(Age ~ Pclass, ds)
# 3. Contrast analysis
contrasts(ds$Pclass)
contrasts(ds$Pclass)<-contr.sum(n=3)
contrasts(ds$Pclass)
model2<-lm(Age~Pclass, data=ds)
summary(model2)
library(graphics)
library(smooth)
library(fpp)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(MASS)
library(effsize)
library(readxl)
setwd("D:/Business/Study/Univ/3_course/1_semester/Data science/Lab_5/")
ExchangeRate_UAH =  read_excel("ExchangeRate_UAH.xlsx",
col_types = c("text", "skip", "skip",
"text", "skip", "text", "numeric"))
DollarExchangeRate = ExchangeRate_UAH[ExchangeRate_UAH$`Код літерний` == 'USD',]
x = DollarExchangeRate$`Офіційний курс гривні, грн`
ExchangeRate_UAH$Дата = as.Date(ExchangeRate_UAH$Дата , "%d.%m.%Y")
DollarExchangeRate$Дата = as.Date(DollarExchangeRate$Дата , "%d.%m.%Y")
decompose(DollarExchangeRate$Дата)
DollarExchangeRate$Дата
time_ser=ts(DollarExchangeRate$Дата,frequency=4)
time_ser
decompose(time_ser)
plot(decompose(time_ser))
plot(decompose(ts(x,frequency=4)))
rm(time_ser)
diff(decompose(ts(x,frequency=4) , lag=4)
diff(decompose(ts(x,frequency=4)) , lag=4)
diff(decompose(ts(x,frequency=4)) , lag=4)
plot(decompose(ts(x,frequency=4)))
diff(decompose(ts(x,frequency=4)) , lag=4)
diff(x , lag=4)
plot(diff(x , lag=4))
plot(ds1, xlab="Час", ylab="Квартальний індекс роздрібної торгівлі",
main="1-е застосування диференціювання")
plot(plot(diff(x , lag=4)), xlab="Час", ylab="Квартальний індекс роздрібної торгівлі",
main="1-е застосування диференціювання")
diff_1 = diff(x , lag=4)
plot(diff_1)
plot(diff_1, xlab="Час", ylab="Квартальний індекс роздрібної торгівлі",
main="1-е застосування диференціювання")
plot(decompose(ts(x,frequency=4)))
plot(diff_1, xlab="Час", ylab="Квартальний індекс роздрібної торгівлі",
main="1-е застосування диференціювання")
plot(DollarExchangeRate$Дата, DollarExchangeRate$`Офіційний курс гривні, грн`,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "Курс гривні до долара за 5.12.2020 - 5.12.2021")
plot(DollarExchangeRate$Дата, DollarExchangeRate$`Офіційний курс гривні, грн`,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(DollarExchangeRate$Дата, diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
diff_1 = diff(x)
plot(DollarExchangeRate$Дата, diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
diff_1 = diff(x , lag=2)
plot(DollarExchangeRate$Дата, diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
diff_1 = diff(x , lag=3)
plot(DollarExchangeRate$Дата, diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
diff_1 = diff(x , lag=10)
plot(DollarExchangeRate$Дата, diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(DollarExchangeRate$Дата, diff_1)
dollarTimeSeries = ts(myvector, DollarExchangeRate$Дата, frequency=12)
dollarTimeSeries = ts(x, DollarExchangeRate$Дата, frequency=12)
dollarTimeSeries
plot(decompose(ts(x,frequency=4)))
plot(dollarTimeSeries))
plot(dollarTimeSeries)
dollarTimeSeries = ts(x, DollarExchangeRate$Дата, frequency=12)
plot(decompose(dollarTimeSeries))
plot(diff(dollarTimeSeries , lag = 4),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "Курс гривні до долара за 5.12.2020 - 5.12.2021")
plot(diff(dollarTimeSeries , lag = 4),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
dollarTimeSeries = ts(x, DollarExchangeRate$Дата, frequency=4)
plot(decompose(dollarTimeSeries))
dollarTimeSeries = ts(x, DollarExchangeRate$Дата, frequency=12)
plot(decompose(dollarTimeSeries))
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
plot(diff(dollarTimeSeries , lag = 12),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff(diff(dollarTimeSeries , lag = 12)),
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
diff_2 = diff(diff_1)
plot(decompose(dollarTimeSeries))
plot(diff_1,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "1 диференціювання")
plot(diff_2,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
diff_2 %>% ggtsdisplay()
holtWinters = HoltWinters(dollarTimeSeries)
prediction = predict(hw, 50, prediction.interval = F)
prediction = predict(holtWinters, 50, prediction.interval = F)
plot(holtWinters, prediction,
xlab="Рік",
ylab="Курс гривні до долара за 5.12.2020 - 5.12.2021",
main="Прогноз за методом Холта-Вінтерса для курсу долара")
dollarTimeSeries %>% Arima(order=c(0,1,1), seasonal=c(0,1,1)) %>%
residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,1), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,1), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,2), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,3), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
library(forecast)
plot(forecast(Arima(ds,order=c(0,1,3), seasonal=c(0,1,1)),
plot(forecast(Arima(ds,order=c(0,1,3), seasonal=c(0,1,1)),
fit  = Arima(ds,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit),
xlab="Рік",
ylab="Квартальний індекс роздрібної торгівлі",
main="Прогноз за моделлю ARIMA(0,1,3)(0,1,1)[4]")
plot(forecast(fit))
fit  = Arima(ds,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit))
fit  = Arima(ds,order=c(0,1,3), seasonal=c(0,1,1))
fit  = Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit))
fit
fit  = Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit))
plot(forecast(fit))
fit  = Arima(x,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit))
dollarTimeSeries
fit  = Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))
plot(forecast(fit))
forecast(fit)
Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1)
Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1)
Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))
library(forecast)
plot(forecast(Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))), xlab="Рік", ylab="Квартальний індекс роздрібної торгівлі",
main="Прогноз за моделлю ARIMA(0,1,3)(0,1,1)[4]")
fit = Arima(ds,order=c(0,1,3), seasonal=c(0,1,1))
fit = Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1))
forecast(fir)
forecast(fit)
forecast = forecast(Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1)))
foreCast = forecast(Arima(dollarTimeSeries,order=c(0,1,3), seasonal=c(0,1,1)))
View(foreCast)
plot(foreCast, xlab="Рік", ylab="Квартальний індекс роздрібної торгівлі",
main="Прогноз за моделлю ARIMA(0,1,3)(0,1,1)[4]")
require(tseries)
require(astsa)
fit = arima(dollarTimeSeries, order=c(0,1,3), seasonal=c(0,1,1)))
fit = arima(dollarTimeSeries, order=c(0,1,3), seasonal=c(0,1,1))
fit = arima(dollarTimeSeries, order=c(0,1,3), seasonal=c(0,1,1))
fit = arima(dollarTimeSeries, order=c(0,1,3), seasonal=c(0,1,1))
arimaPrediction = predict(fit, n.ahead = 50)
ts.plot(gtemp, pred$pred, lty = c(1,3), col=c(5,2))
ts.plot(dollarTimeSeries, arimaPrediction$pred, lty = c(1,3), col=c(5,2))
ts.plot(dollarTimeSeries, arimaPrediction$pred, lty = c(1,3), col=c(5,2) , lwd = 2)
ts.plot(dollarTimeSeries, arimaPrediction$pred, lty = c(1,3), col=c(5,2) , lwd = 3)
2
ts.plot(dollarTimeSeries, arimaPrediction$pred, lty = c(1,3), col=c(5,2) , lwd = 2)
ts.plot(dollarTimeSeries, arimaPrediction$pred, lty = c(1,3), col=c(5,2) , lwd = 3)
library(astsa)
install.packages("astsa")
library(astsa)
require(astsa)
sarima(ds,0,1,3,0,1,1,4)
sarima(dollarTimeSeries,0,1,3,0,1,1,4)
plot(DollarExchangeRate$Дата, DollarExchangeRate$`Офіційний курс гривні, грн`,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "Курс гривні до долара за 5.12.2020 - 5.12.2021")
plot(diff_2,
type='l',
lwd = 2 ,
col="red",
xlab = "Дата",
ylab="Курс гривні",
main = "2 диференціювання")
fit = arima(dollarTimeSeries, order=c(0,1,3), seasonal=c(0,1,1))
arimaPrediction = predict(fit, n.ahead = 50)
ts.plot(dollarTimeSeries, arimaPrediction$pred,
lty = c(1,3), col=c(5,2),
lwd = 3)
dollarTimeSeries %>% Arima(order=c(0,1,3), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,5), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,10), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,10), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,5), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,7), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,4), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,5), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,6), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,7), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,8), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,9), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,11), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,12), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,13), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
dollarTimeSeries %>% Arima(order=c(0,1,14), seasonal=c(0,1,1)) %>% residuals() %>% ggtsdisplay()
