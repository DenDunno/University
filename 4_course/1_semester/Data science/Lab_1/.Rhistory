2+2
2+2
clear
library(psych)
library(moments)
library(magrittr)
library(psych)
library(moments)
library(magrittr)
library(dplyr)
setwd("D:/Business/University/University_3_course/4_course/1_semester/Data science/Lab_1")
data = read.table("A2.txt", header = FALSE, sep = ",", dec = ".")
data = as.data.frame.matrix(data)
getmode = function(x)
{
uniqv = unique(x)
uniqv[which.max(tabulate(match(x, uniqv)))]
}
GiniMd = function(x, na.rm=FALSE)
{
if(na.rm)
{
k = is.na(x)
if(any(k)) x <- x[! k]
}
n =length(x)
if(n < 2) return(NA)
w = 4 * ((1 : n) - (n - 1) / 2) / n / (n - 1)
sum(w * sort(x - mean(x)))  ## center for numerical stability only
}
DispersAnalasis <- function(values)
{
disan <- ((1 / (length(values) - 1)) * sum(((values - sum(values))*(values - sum(values)))))
return(disan)
}
preliminaryProcessing = function(x, channelIndex)
{
print(paste(channelIndex, " канал"))
print(paste("Середнє = ", mean(x)))
print(paste("Середнє гармонійне = ", harmonic.mean(x)))
print(paste("Середнє геометричне = ", geometric.mean(x)))
print(paste("Дисперсія = ", var(x)))
print(paste("Середня різниця Джині = ", GiniMd(x, na.rm=FALSE)))
print(paste("Мода = ", getmode(x)))
print(paste("Медіана = ", median(x)))
print(paste("Коефіцієнт асиметрії = ", skewness(x)))
print(paste("Коефіцієнт ексцесу = ", kurtosis(x)))
hist(x, main = paste(channelIndex, " канал"), xlab="Value", col="deepskyblue")
print("Тест:")
shapiro.test(x)
}
normalization = function(x)
{
tempData = as.data.frame(scale(data))
print(paste("Cереднє = ", mean(tempData$V1)))
print(paste("Дисперсія = ", var(tempData$V1)))
}
anova = function(x)
{
temp = data %>% summarise_each(funs(DispersAnalasis))
max = max(temp)
sum = sum(temp)
g = max / sum
print(paste("Max = ", max))
print(paste("Sum = ", sum))
print(paste("G = ", g))
print(paste("ga(k, n) = ", 0.153))
}
twoWayAnova = function(x)
{
data1 = data[1:1000, ]
data2 = data[1001:2000, ]
data3 = data[2001:3000, ]
data4 = data[3001:4000, ]
data5 = data[4001:5000, ]
mean1 = data1 %>% summarise_each(funs(mean))
mean2 = data2 %>% summarise_each(funs(mean))
mean3 = data3 %>% summarise_each(funs(mean))
mean4 = data4 %>% summarise_each(funs(mean))
mean5 = data5 %>% summarise_each(funs(mean))
#print(mean1)
#print(mean2)
#print(mean3)
#print(mean4)
#print(mean5)
sumByColumnTable = data.frame(mean1, mean2, mean3, mean4, mean5)
sumByColumnTable.
}
fur = function(x)
{
}
# Normalization
normalization(data)
# ANOVA
anova(data)
# ANOVA
anova(data)
# Two-way ANOVA
data1 = data[1:1000, ]
data2 = data[1001:2000, ]
data3 = data[2001:3000, ]
data4 = data[3001:4000, ]
data5 = data[4001:5000, ]
mean1 = data1 %>% summarise_each(funs(mean))
mean2 = data2 %>% summarise_each(funs(mean))
mean3 = data3 %>% summarise_each(funs(mean))
mean4 = data4 %>% summarise_each(funs(mean))
mean5 = data5 %>% summarise_each(funs(mean))
print(mean1)
print(mean2)
print(mean3)
print(mean4)
print(mean5)
sumByColumnTable = rbind(mean1, mean2, mean3, mean4, mean5)
columnsSum = colSums(aboba)
columnsSum = colSums(sumByColumnTable)
columnsSum
print(columnsSum)
sumMean1 = sum(mean1)
sumMean2 = sum(mean2)
sumMean3 = sum(mean3)
sumMean4 = sum(mean4)
sumMean5 = sum(mean5)
print(sumMean1)
print(sumMean2)
print(sumMean3)
print(sumMean4)
print(sumMean5)
Q1
Q1 = sum(mean1 * mean1) +
sum(mean2 * mean2) +
sum(mean3 * mean3) +
sum(mean4 * mean4) +
sum(mean5 * mean5)
Q1
Q22 <- function(values){
x1 <- (sum(values * values))
return (x1)
}
Q21 <- Q22(sumByColumnTable)
Q2 <- (1/5 * Q21)
print(Q2)
Q3 <- ((1 / 12) * (sum(mean1) * sum(mean1) +
sum(mean2) * sum(mean2) +
sum(mean3) * sum(mean3) +
sum(mean4) * sum(mean4) +
sum(mean5) * sum(mean5)))
print(Q3)
Q4 <- ((1 / 60) * sum(sumByColumnTable) * sum(sumByColumnTable))
print(Q4)
S0_2 <- ((Q1 + Q4 - Q2 - Q3) / 44)
print(S0_2)
SA_2 <- ((Q2 - Q4) / 11)
print(SA_2)
SB_2 <- ((Q3 - Q4) / 4)
print(SB_2)
print(SA_2 / S0_2)
print(SB_2 / S0_2)
df(0.05, 11, 44)
df(0.05, 4, 44)
# Correlation matrix
cor(data)
print(rab)
print(rac)
print(rad)
print(rbc)
print(rbd)
print(rcd)
rab <- cor(a, b, method = "pearson")
rac <- cor(a, c, method = "pearson")
a = data$V1;
b = data$V4;
c = data$V10;
d = data$V11;
rab <- cor(a, b, method = "pearson")
rac <- cor(a, c, method = "pearson")
rad <- cor(a, d, method = "pearson")
rbc <- cor(b, c, method = "pearson")
rbd <- cor(b, d, method = "pearson")
rcd <- cor(c, d, method = "pearson")
print(rab)
print(rac)
print(rad)
print(rbc)
print(rbd)
print(rcd)
rab_c <- ((rab - rac * rbc) / sqrt((1 - rac) * (1 - rbc)))
print(rab_c)
rac_b <- ((rac - rab * rbc) / sqrt((1 - rab) * (1 - rbc)))
print(rac_b)
rab_cd <- ((rab - rac * rbc * rad * rbd) / sqrt((1 - rac) * (1 - rbc) * (1 - rad) * (1 - rbd)))
print(rab_cd)
rac_bd <- ((rac - rab * rbc * rad * rcd) / sqrt((1 - rab) * (1 - rbc) * (1 - rad) * (1 - rcd)))
print(rac_bd)
rad_bc <- ((rad - rab * rbd * rac * rcd) / sqrt((1 - rab) * (1 - rbd) * (1 - rac) * (1 - rcd)))
print(rad_bc)
ra_bc <- sqrt((rab * rab + rac * rac - 2 * rab * rac * rbc) / (1 - rbc * rbc))
print(ra_bc)
ra_bcd <- (1 - (1 - rab * rab) * (1 - rac_b * rac_b) * (1 - rad_bc * rad_bc))
print(ra_bcd)
# Factor analysis
corData <- cor(data)
eigenData <- eigen(corData)
print(eigenData$values)
plot(eigenData$values, type = "b", col="green")
print(eigenData$values)
# Кластерний аналіз
CardioStat.kmeans7 <- kmeans(data, centers = 7)
print(CardioStat.kmeans7$cluster)
print(CardioStat.kmeans7$cluster)
CardioStat.kmeans7 <- kmeans(data, centers = 5)
hist(CardioStat.kmeans7$cluster)
print(CardioStat.kmeans7$cluster)
print(MCardioStat.kmeans4$cluster)
MCardioStat.kmeans4 <- kmeans(res1, centers = 7)
hist(MCardioStat.kmeans4$cluster)
print(MCardioStat.kmeans4$cluster)
MCardioStat.kmeans4 <- kmeans(res1, centers = 7)
hist(MCardioStat.kmeans4$cluster)
# Кластерний аналіз
CardioStat.kmeans7 <- kmeans(data, centers = 7)
hist(CardioStat.kmeans7$cluster)
print(CardioStat.kmeans7$cluster)
CardioStat.kmeans7 <- kmeans(data, centers = 5)
hist(CardioStat.kmeans7$cluster)
print(CardioStat.kmeans7$cluster)
MCardioStat.kmeans4 <- kmeans(res1, centers = 7)
MCardioStat.kmeans4 <- kmeans(data, centers = 7)
hist(MCardioStat.kmeans4$cluster)
print(MCardioStat.kmeans4$cluster)
MCardioStat.kmeans4 <- kmeans(data, centers = 5)
hist(MCardioStat.kmeans4$cluster)
print(MCardioStat.kmeans4$cluster)
print(MCardioStat.kmeans4$cluster)
